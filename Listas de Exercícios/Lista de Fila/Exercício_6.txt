/** 6) Implemente um método que receba três filas, duas já preenchidas em
    ordem crescente e preencha a última com os valores das duas primeiras
    em ordem crescente.  **/


Função criada para a conclusão do exercício, autores Vitor Eduardo e Mayara Rodrigues:

void preenche_fila(Fila* f1, Fila* f2, Fila* f3){
    /// Verifica se a Fila 1 existe e se tem algum conteudo
    if(f1 == NULL){
        return;
    }
    if(f1->inicio == NULL){
        return;
    }
    /// Verifica se a Fila 2 existe e se tem algum conteudo
    if(f2 == NULL){
        return;
    }
    if(f2->inicio == NULL){
        return;
    }
    /// Criando no para pegar as informacoes da fila
    Elem* no_f1 = f1->inicio;
    Elem* no_f2 = f2->inicio;
    /// Criando um no aonde vamos inserir as informacoes
    Elem* no_f3;
    /// Variavel criada para saber quantos elementos terao em f3
    int tam_filas = f1->qtd + f2->qtd;
    /// Comparando f1 e f2 para saber a ordem dos elementos
    while(tam_filas != 0){
        if(no_f2 == NULL || no_f1->dados.matricula >= no_f2->dados.matricula){
            /// Alocando o no que vai para a f3
            no_f3 = (Elem*) malloc(sizeof(Elem));
            if(no_f3 == NULL){
                return;
            }
            /// Metodo padrao de insercao na fila
            no_f3->dados = no_f1->dados;
            no_f3->prox = NULL;
            if(f3->final == NULL)
                f3->inicio = no_f3;
            else
                f3->final->prox = no_f3;
            f3->final = no_f3;
            f3->qtd++;
            /// Avanca o no f1 que ja foi inserido
            no_f1 = no_f1->prox;
        }
        else if(no_f1 == NULL || no_f2->dados.matricula >= no_f1->dados.matricula){
            /// Alocando o no que vai para a f3
            no_f3 = (Elem*) malloc(sizeof(Elem));
            if(no_f3 == NULL){
                return;
            }
            /// Metodo padrao de insercao na fila
            no_f3->dados = no_f2->dados;
            no_f3->prox = NULL;
            if(f3->final == NULL)
                f3->inicio = no_f3;
            else
                f3->final->prox = no_f3;
            f3->final = no_f3;
            f3->qtd++;
            /// Avanca o no f2 que ja foi inserido
            no_f2 = no_f2->prox;
        }
        /// Controlando as repeticoes
        tam_filas--;
    }
    return;
}
